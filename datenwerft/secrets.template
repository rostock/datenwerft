import ldap

from django_auth_ldap.config import LDAPSearch, GroupOfNamesType
from pathlib import Path

BASE_DIR_CUSTOM = Path(__file__).resolve().parent.parent

DEBUG = False

SECRET_KEY = 'abcdefghijklmnopqrstuvwxyz0123456789-#(!$&%abcdefg'

ALLOWED_HOSTS = [
  'abc.de',
  '1.2.3.4',
  'localhost',
  '127.0.0.1',
  '::1'
]

CSRF_TRUSTED_ORIGINS = [
  'https://abc.de'
]

TEMPLATES = [
  {
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [
      BASE_DIR_CUSTOM / 'templates',
      BASE_DIR_CUSTOM / 'accounts/templates',
      BASE_DIR_CUSTOM / 'datenmanagement/templates'
    ],
    'APP_DIRS': True,
    'OPTIONS': {
      'context_processors': [
        'django.template.context_processors.debug',
        'django.template.context_processors.request',
        'django.contrib.auth.context_processors.auth',
        'django.contrib.messages.context_processors.messages',
        'datenwerft.context_processors.datenmanagement_version',
        'datenwerft.context_processors.address_search_key',
        'datenwerft.context_processors.include_login_form',
      ],
      'libraries': {
        'datenmanagement_tags': 'datenmanagement.tags.tags'
      },
    },
  },
]

# Datenbank

DATABASES = {
  'default': {
    'ENGINE': 'django.contrib.gis.db.backends.postgis',
    'NAME': 'datenwerft',
    'OPTIONS': {
      'options': '-c search_path=django,public'
    },
    'USER': 'user',
    'PASSWORD': 'password',
    'HOST': '127.0.0.1',
    'PORT': '5432',
  }
}

POSTGIS_VERSION = (2, 5, 2)

# Authentisierung

AUTHENTICATION_BACKENDS = (
  'django_auth_ldap.backend.LDAPBackend',
  'django.contrib.auth.backends.ModelBackend',
  'guardian.backends.ObjectPermissionBackend',
)

AUTH_LDAP_EXTENSION_INTERNAL_IP_ADDRESSES = [
  '127.0.0.1',
  '192.0.0.0/8'
]

AUTH_LDAP_GLOBAL_OPTIONS = {
  ldap.OPT_X_TLS_REQUIRE_CERT: ldap.OPT_X_TLS_NEVER
}

AUTH_LDAP_SERVER_URI = 'ldaps://127.0.0.1'

AUTH_LDAP_BIND_DN = ''

AUTH_LDAP_BIND_PASSWORD = ''

AUTH_LDAP_ALWAYS_UPDATE_USER = True

AUTH_LDAP_GROUP_SEARCH = LDAPSearch(
  'ou=Abteilung,ou=Amt,o=Stadt',
  ldap.SCOPE_SUBTREE,
  '(objectClass=groupOfNames)'
)

AUTH_LDAP_GROUP_TYPE = GroupOfNamesType()

AUTH_LDAP_REQUIRE_GROUP = 'cn=Gruppe,ou=Abteilung,ou=Amt,o=Stadt'

AUTH_LDAP_USER_SEARCH = LDAPSearch(
  'o=Stadt',
  ldap.SCOPE_SUBTREE,
  '(uid=%(user)s)'
)

AUTH_LDAP_USER_ATTR_MAP = {
  'first_name': 'givenName',
  'last_name': 'sn',
  'email': 'mail'
}

LOGIN_REDIRECT_URL = '/datenmanagement/'

LOGIN_URL = '/accounts/login/'

# E-Mail

DEFAULT_FROM_EMAIL = 'webmaster@localhost'

EMAIL_HOST = '127.0.0.1'

# statische Dateien (CSS, JavaScript, Bilder)

STATIC_URL = '/datenwerft/static/'

STATIC_ROOT = BASE_DIR_CUSTOM / 'static'

# Upload

MEDIA_URL = '/datenwerft/uploads/'

MEDIA_ROOT = BASE_DIR_CUSTOM / 'uploads'

PDF_PATH_PREFIX_PUBLIC = 'public/pdf/'

PDF_PATH_PREFIX_PRIVATE = 'private/pdf/'

PHOTO_PATH_PREFIX_PUBLIC = 'public/photos/'

PHOTO_PATH_PREFIX_PRIVATE = 'private/photos/'

# Addressensuche

ADDRESS_SEARCH_URL = 'https://geo.sv.rostock.de/geocodr/query?'

ADDRESS_SEARCH_KEY = 'abcdefghijklmnopqrstuvwxyz012345'

REVERSE_SEARCH_RADIUS = 200  # m

# OWS-Proxy

OWS_BASE = 'https://geo.sv.rostock.de/geodienste'

# FME

FME_URL = 'https://geo.sv.rostock.de/fme'

FME_TOKEN = 'fmetoken token=abcdefghijklmnopqrstuvwxyz0123456789-#(!'

# relevant nur f√ºr Entwicklungsumgebungen unter Microsoft Windows

GDAL_LIBRARY_PATH = 'C:\\Program Files\\QGIS 3.28.0\\bin\\gdal305.dll'

GEOS_LIBRARY_PATH = 'C:\\Program Files\\QGIS 3.28.0\\bin\\geos_c.dll'
