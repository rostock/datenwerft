# Generated by Django 4.2 on 2023-04-14 10:20

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('bemas', '0002_auto_20230413_1651'),
    ]

    operations = [
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellung')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='letzte Änderung')),
                ('model', models.CharField(editable=False, max_length=255, verbose_name='Objektklasse')),
                ('object_pk', models.BigIntegerField(editable=False, verbose_name='ID des Objekts')),
                ('object_str', models.CharField(editable=False, max_length=255, verbose_name='Objekt')),
                ('action', models.CharField(editable=False, max_length=255, verbose_name='Aktion')),
                ('user', models.CharField(editable=False, max_length=255, verbose_name='Benutzer:in')),
            ],
            options={
                'verbose_name': 'Eintrag im Bearbeitungsverlauf',
                'verbose_name_plural': 'Einträge im Bearbeitungsverlauf',
                'db_table': 'logentry',
                'ordering': ['id'],
                'get_latest_by': 'updated_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellung')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='letzte Änderung')),
                ('user', models.CharField(editable=False, max_length=255, verbose_name='Benutzer:in')),
                ('description', models.TextField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Texte dürfen keine Akute (´) enthalten. Stattdessen muss der typographisch korrekte Apostroph (’) verwendet werden.', regex='^(?!.*´).*$'), django.core.validators.RegexValidator(message='Texte dürfen keine doppelten Schreibmaschinensatz-Anführungszeichen (") enthalten. Stattdessen müssen die typographisch korrekten Anführungszeichen („“) verwendet werden.', regex='^(?!.*\\").*$'), django.core.validators.RegexValidator(message="Texte dürfen keine einfachen Schreibmaschinensatz-Anführungszeichen (') enthalten. Stattdessen muss der typographisch korrekte Apostroph(’) verwendet werden.", regex="^(?!.*\\').*$"), django.core.validators.RegexValidator(message='Texte dürfen keine doppelten Leerzeichen und/oder Zeilenumbrüche enthalten.', regex='^(?!.*  ).*$'), django.core.validators.RegexValidator(message='Texte dürfen keine Gravis (`) enthalten. Stattdessen muss der typographisch korrekte Apostroph (’) verwendet werden.', regex='^(?!.*`).*$')], verbose_name='Beschreibung')),
                ('dms_link', models.CharField(blank=True, max_length=16, null=True, validators=[django.core.validators.RegexValidator(message='Der <strong><em>d.3</em></strong>-Vorgang muss folgendes Format aufweisen (Beispiel): 552.6#04-004/008', regex='^[0-9]{3}\\.[0-9]#[0-9]{2}-[0-9]{3}\\/[0-9]{3}$')], verbose_name=' d.3')),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bemas.complaint', verbose_name='Beschwerde')),
                ('type_of_event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bemas.typeofevent', verbose_name='Ereignisart')),
            ],
            options={
                'verbose_name': 'Journalereignis',
                'verbose_name_plural': 'Journalereignisse',
                'db_table': 'event',
                'ordering': ['complaint__id', 'created_at'],
                'get_latest_by': 'updated_at',
                'abstract': False,
            },
        ),
    ]
