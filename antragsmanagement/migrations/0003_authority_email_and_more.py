# Generated by Django 5.0.6 on 2024-06-11 09:17

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('antragsmanagement', '0002_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='Authority',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Erstellung')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='letzte Änderung')),
                ('group', models.CharField(editable=False, verbose_name='Gruppe')),
                ('name', models.CharField(editable=False, unique=True, verbose_name='Bezeichnung')),
                ('email', models.EmailField(max_length=254, verbose_name='E-Mail-Adresse')),
            ],
            options={
                'verbose_name': 'Behörde',
                'verbose_name_plural': 'Behörden',
                'db_table': 'authority',
                'ordering': ['name'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Erstellung')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='letzte Änderung')),
                ('key', models.CharField(editable=False, unique=True, verbose_name='Identifikator')),
                ('body', models.TextField(validators=[django.core.validators.RegexValidator(message='Texte dürfen keine Akute (´) enthalten. Stattdessen muss der typographisch korrekte Apostroph (’) verwendet werden.', regex='^(?!.*´).*$'), django.core.validators.RegexValidator(message='Texte dürfen keine doppelten Schreibmaschinensatz-Anführungszeichen (") enthalten. Stattdessen müssen die typographisch korrekten Anführungszeichen („“) verwendet werden.', regex='^(?!.*\\").*$'), django.core.validators.RegexValidator(message="Texte dürfen keine einfachen Schreibmaschinensatz-Anführungszeichen (') enthalten. Stattdessen muss der typographisch korrekte Apostroph(’) verwendet werden.", regex="^(?!.*\\').*$"), django.core.validators.RegexValidator(message='Texte dürfen keine doppelten Leerzeichen enthalten.', regex='^(?!.*  ).*$'), django.core.validators.RegexValidator(message='Texte dürfen keine Gravis (`) enthalten. Stattdessen muss der typographisch korrekte Apostroph (’) verwendet werden.', regex='^(?!.*`).*$')], verbose_name='Inhalt')),
            ],
            options={
                'verbose_name': 'E-Mail',
                'verbose_name_plural': 'E-Mails',
                'db_table': 'email',
                'ordering': ['key'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AlterModelOptions(
            name='cleanupeventcodelistequipment',
            options={'get_latest_by': 'modified', 'ordering': ['ordinal', 'name'], 'verbose_name': 'Austattung', 'verbose_name_plural': 'Austattungen'},
        ),
        migrations.AlterModelOptions(
            name='cleanupeventcodelistwastequantity',
            options={'get_latest_by': 'modified', 'ordering': ['ordinal', 'name'], 'verbose_name': 'Abfallmenge', 'verbose_name_plural': 'Abfallmengen'},
        ),
        migrations.AlterModelOptions(
            name='cleanupeventcodelistwastetype',
            options={'get_latest_by': 'modified', 'ordering': ['ordinal', 'name'], 'verbose_name': 'Abfallart', 'verbose_name_plural': 'Abfallarten'},
        ),
        migrations.CreateModel(
            name='CleanupEventRequest',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Erstellung')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='letzte Änderung')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='antragsmanagement.codelistrequeststatus', verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Antrag',
                'verbose_name_plural': 'Anträge',
                'db_table': 'cleanupevent_request',
                'ordering': ['-id'],
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
