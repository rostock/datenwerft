# Generated by Django 5.0.6 on 2024-06-21 11:22

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('antragsmanagement', '0003_alter_cleanupeventcontainer_place_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='cleanupeventcontainer',
            name='place',
            field=django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Containerstandort für Müllsammelaktion'),
        ),
        migrations.AlterField(
            model_name='requester',
            name='first_name',
            field=models.CharField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Texte dürfen keine Akute (´) enthalten. Stattdessen muss der typographisch korrekte Apostroph (’) verwendet werden.', regex='^(?!.*´).*$'), django.core.validators.RegexValidator(message='Texte dürfen keine doppelten Schreibmaschinensatz-Anführungszeichen (") enthalten. Stattdessen müssen die typographisch korrekten Anführungszeichen („“) verwendet werden.', regex='^(?!.*\\").*$'), django.core.validators.RegexValidator(message="Texte dürfen keine einfachen Schreibmaschinensatz-Anführungszeichen (') enthalten. Stattdessen muss der typographisch korrekte Apostroph(’) verwendet werden.", regex="^(?!.*\\').*$"), django.core.validators.RegexValidator(message='Texte dürfen keine doppelten Leerzeichen enthalten.', regex='^(?!.*  ).*$'), django.core.validators.RegexValidator(message='Texte dürfen keine Gravis (`) enthalten. Stattdessen muss der typographisch korrekte Apostroph (’) verwendet werden.', regex='^(?!.*`).*$'), django.core.validators.RegexValidator(message='Im Text darf nach einem Bindestrich kein Leerzeichen stehen.', regex='^(?!.*- ).*$'), django.core.validators.RegexValidator(message='Im Text darf vor einem Bindestrich kein Leerzeichen stehen.', regex='^(?!.* -).*$')], verbose_name='Vorname'),
        ),
        migrations.AlterField(
            model_name='requester',
            name='last_name',
            field=models.CharField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Texte dürfen keine Akute (´) enthalten. Stattdessen muss der typographisch korrekte Apostroph (’) verwendet werden.', regex='^(?!.*´).*$'), django.core.validators.RegexValidator(message='Texte dürfen keine doppelten Schreibmaschinensatz-Anführungszeichen (") enthalten. Stattdessen müssen die typographisch korrekten Anführungszeichen („“) verwendet werden.', regex='^(?!.*\\").*$'), django.core.validators.RegexValidator(message="Texte dürfen keine einfachen Schreibmaschinensatz-Anführungszeichen (') enthalten. Stattdessen muss der typographisch korrekte Apostroph(’) verwendet werden.", regex="^(?!.*\\').*$"), django.core.validators.RegexValidator(message='Texte dürfen keine doppelten Leerzeichen enthalten.', regex='^(?!.*  ).*$'), django.core.validators.RegexValidator(message='Texte dürfen keine Gravis (`) enthalten. Stattdessen muss der typographisch korrekte Apostroph (’) verwendet werden.', regex='^(?!.*`).*$'), django.core.validators.RegexValidator(message='Im Text darf nach einem Bindestrich kein Leerzeichen stehen.', regex='^(?!.*- ).*$'), django.core.validators.RegexValidator(message='Im Text darf vor einem Bindestrich kein Leerzeichen stehen.', regex='^(?!.* -).*$')], verbose_name='Nachname'),
        ),
    ]
